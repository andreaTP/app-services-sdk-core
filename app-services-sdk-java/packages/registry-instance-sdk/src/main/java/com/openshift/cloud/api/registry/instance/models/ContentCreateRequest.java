/*
 * Service Registry API
 * Service Registry Instance API  NOTE: This API cannot be called directly from the portal.
 *
 * The version of the OpenAPI document: 2.2.5.Final
 * Contact: apicurio@lists.jboss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.registry.instance.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openshift.cloud.api.registry.instance.models.ArtifactReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContentCreateRequest
 */
@JsonPropertyOrder({
  ContentCreateRequest.JSON_PROPERTY_CONTENT,
  ContentCreateRequest.JSON_PROPERTY_REFERENCES
})
@JsonTypeName("ContentCreateRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ContentCreateRequest {
  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_REFERENCES = "references";
  private List<ArtifactReference> references = new ArrayList<>();

  public ContentCreateRequest() { 
  }

  public ContentCreateRequest content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Raw content of the artifact or a valid (and accessible) URL where the content can be found.
   * @return content
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "", required = true, value = "Raw content of the artifact or a valid (and accessible) URL where the content can be found.")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(String content) {
    this.content = content;
  }


  public ContentCreateRequest references(List<ArtifactReference> references) {
    
    this.references = references;
    return this;
  }

  public ContentCreateRequest addReferencesItem(ArtifactReference referencesItem) {
    this.references.add(referencesItem);
    return this;
  }

   /**
   * Collection of references to other artifacts.
   * @return references
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Collection of references to other artifacts.")
  @JsonProperty(JSON_PROPERTY_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ArtifactReference> getReferences() {
    return references;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferences(List<ArtifactReference> references) {
    this.references = references;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentCreateRequest contentCreateRequest = (ContentCreateRequest) o;
    return Objects.equals(this.content, contentCreateRequest.content) &&
        Objects.equals(this.references, contentCreateRequest.references);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, references);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentCreateRequest {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

