/*
 * Service Registry API
 * Service Registry Instance API  NOTE: This API cannot be called directly from the portal.
 *
 * The version of the OpenAPI document: 2.2.5.Final
 * Contact: apicurio@lists.jboss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.registry.instance.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openshift.cloud.api.registry.instance.models.RoleType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The mapping between a user/principal and their role.
 */
@ApiModel(description = "The mapping between a user/principal and their role.")
@JsonPropertyOrder({
  RoleMapping.JSON_PROPERTY_PRINCIPAL_ID,
  RoleMapping.JSON_PROPERTY_ROLE,
  RoleMapping.JSON_PROPERTY_PRINCIPAL_NAME
})
@JsonTypeName("RoleMapping")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RoleMapping {
  public static final String JSON_PROPERTY_PRINCIPAL_ID = "principalId";
  private String principalId;

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleType role;

  public static final String JSON_PROPERTY_PRINCIPAL_NAME = "principalName";
  private String principalName;

  public RoleMapping() { 
  }

  public RoleMapping principalId(String principalId) {
    
    this.principalId = principalId;
    return this;
  }

   /**
   * Get principalId
   * @return principalId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPrincipalId() {
    return principalId;
  }


  @JsonProperty(JSON_PROPERTY_PRINCIPAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrincipalId(String principalId) {
    this.principalId = principalId;
  }


  public RoleMapping role(RoleType role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RoleType getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(RoleType role) {
    this.role = role;
  }


  public RoleMapping principalName(String principalName) {
    
    this.principalName = principalName;
    return this;
  }

   /**
   * A friendly name for the principal.
   * @return principalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A friendly name for the principal.")
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrincipalName() {
    return principalName;
  }


  @JsonProperty(JSON_PROPERTY_PRINCIPAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrincipalName(String principalName) {
    this.principalName = principalName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleMapping roleMapping = (RoleMapping) o;
    return Objects.equals(this.principalId, roleMapping.principalId) &&
        Objects.equals(this.role, roleMapping.role) &&
        Objects.equals(this.principalName, roleMapping.principalName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(principalId, role, principalName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleMapping {\n");
    sb.append("    principalId: ").append(toIndentedString(principalId)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    principalName: ").append(toIndentedString(principalName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

